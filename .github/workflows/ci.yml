name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  VERSION: "v0.1.0"
  FRONTEND_NAME: "next-template-docker"

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      # Install pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # Install dependencies
      - name: Install dependencies
        run: pnpm install

      # Run tests
      # - name: Run tests
      #   run: pnpm test

      # Lint code
      - name: Run linting
        run: pnpm lint

  docker:
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' pyproject.toml | head -1)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GH_PAT }}

      # - name: Build and push Docker image to GHCR
      #   run: |
      #     IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/${{ env.FRONTEND_NAME }}
      #     docker build -t $IMAGE_NAME:latest .
      #     docker push $IMAGE_NAME:latest

      # - name: Create GitHub Release
      #   run: |
      #     gh release create ${{ env.VERSION }} --generate-notes --title "v${{ env.VERSION }}"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_PAT }}
